#include <iostream>using namespace std;#define INF 9999999#define V 5int G[V][V] = {    {0, 9, 75, 0, 0},    {9, 0, 95, 19, 42},    {75, 95, 0, 51, 66},    {0, 19, 51, 0, 31},    {0, 42, 66, 31, 0}};int main() {    int selected[V] = {false}; // Track selected vertices    int no_edge = 0; // Number of edges in MST    // Start with the first vertex    selected[0] = true;    cout << "Edge : Weight" << endl;    while (no_edge < V - 1) {        int min = INF;        int x, y;        // Iterate over selected vertices        for (int i = 0; i < V; i++) {            if (selected[i]) {                // Iterate over all vertices                for (int j = 0; j < V; j++) {                    if (!selected[j] && G[i][j] && G[i][j] < min) {                        min = G[i][j];                        x = i;                        y = j;                    }                }            }        }        cout << x << " - " << y << " :  " << G[x][y] << endl;        selected[y] = true;        no_edge++;    }    return 0;}