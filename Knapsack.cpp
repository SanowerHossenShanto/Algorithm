#include <iostream>#include <vector>using namespace std;struct Item {    int weight;    int value;};int knapsack(const vector<Item>& items, int capacity) {    vector<int> dp(capacity + 1, 0);    for (const auto& item : items) {        for (int w = capacity; w >= item.weight; --w) {            dp[w] = max(dp[w], dp[w - item.weight] + item.value);        }    }    return dp[capacity];}int main() {    int n, capacity;    cout << "Enter number of items: ";    cin >> n;    vector<Item> items(n);    for (int i = 0; i < n; ++i) {        cout << "Enter weight and value for item " << i + 1 << ": ";        cin >> items[i].weight >> items[i].value;    }    cout << "Enter knapsack capacity: ";    cin >> capacity;    int max_value = knapsack(items, capacity);    cout << "Maximum value achievable: " << max_value << endl;    return 0;}